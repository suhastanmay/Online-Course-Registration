# Generated by Django 2.0.5 on 2018-11-15 17:49

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_student', models.BooleanField(default=False)),
                ('is_teacher', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AcademicCourse',
            fields=[
                ('academic_course_id', models.IntegerField(db_column='Academic_Course_Id', primary_key=True, serialize=False, unique=True)),
                ('academic_course_name', models.CharField(blank=True, db_column='Academic_Course_Name', max_length=45, null=True)),
                ('academic_course_rigour', models.CharField(db_column='Academic_Course_Rigour', max_length=2)),
                ('academic_course_level', models.IntegerField(db_column='Academic_Course_Level')),
                ('academic_course_pre_req', models.CharField(db_column='Academic_Course_Pre-Req', max_length=1)),
                ('academic_cours_delivery_mode', models.IntegerField(db_column='Academic_Course_Delivery_Mode')),
                ('academic_course_description', models.CharField(blank=True, db_column='Academic_Course_Description', max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AcademicProgBatchSemCourse',
            fields=[
                ('academic_prog_batch_sem_course_id', models.IntegerField(db_column='Academic_Prog_Batch_Sem_Course_Id', primary_key=True, serialize=False, unique=True)),
                ('academic_prog_batch_sem_course_sem_num', models.IntegerField(db_column='Academic_Prog_Batch_Sem_Course_Sem_Num')),
                ('academic_prog_batch_sem_course_credits', models.IntegerField(blank=True, db_column='Academic_Prog_Batch_Sem_Course_Credits', null=True)),
                ('academic_prog_batch_sem_course_eval_code', models.CharField(blank=True, db_column='Academic_Prog_Batch_Sem_Course_Eval_Code', max_length=20, null=True)),
                ('academic_prog_batch_sem_course_status', models.CharField(blank=True, db_column='Academic_Prog_Batch_Sem_Course_Status', max_length=45, null=True)),
                ('academic_prog_batch_sem_coursecol', models.CharField(blank=True, db_column='Academic_Prog_Batch_Sem_Coursecol', max_length=45, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AuditCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roll', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='BufferSpecialPermissionsTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('req', models.CharField(max_length=20)),
                ('status', models.CharField(default='pending', max_length=4)),
                ('email', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('prof', models.CharField(max_length=20)),
                ('max_students', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Detail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_GPA', models.IntegerField()),
                ('description', models.CharField(max_length=200)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Course')),
            ],
        ),
        migrations.CreateModel(
            name='final_Register',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=20, null=True)),
                ('course', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=20, null=True)),
                ('course', models.CharField(max_length=20, null=True)),
                ('grade_point', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Register',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=20, null=True)),
                ('course', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SpecialPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('req', models.CharField(max_length=20)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('roll', models.CharField(max_length=12)),
                ('year', models.CharField(max_length=4)),
                ('email', models.CharField(max_length=40)),
                ('cgpa', models.FloatField(max_length=4, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='bufferspecialpermissionstable',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Course'),
        ),
    ]
